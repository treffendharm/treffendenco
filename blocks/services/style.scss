@use '../../src/scss/02-base/mixins' with ($image-base-path: '../../../src/images');

.block-services {
    background-color: var(--color-secondary);
    padding-top: 5rem;
    padding-bottom: 9.5rem;

    .intro {
        font-size: 1.5rem;
    }

    h2 {
        line-height: 90%;
        padding-top: 1.56rem;
        margin-top: 1.56rem;
        border-top: 1px solid var(--color-black);
    }

    .arrow-wrapper {
        overflow: hidden;
        
        .arrow {
            width: clamp(11.875rem, calc(-12.953rem + 95vw), 56.25rem); /* min: 190px, max: 900px */;
            height: 9.75rem;
            @include mixins.mask('pijl-simpel');
            transition: unset;
            background-color: #E0D697;
            margin-top: 5rem;
            margin-bottom: 2rem;
        }
    }

    .subtitle-wrapper {
        padding-bottom: 1.62rem;
        border-bottom: 1px solid var(--color-black);
    }

    .service {
        padding-block: clamp(1.5rem, calc(0.459rem + 2.38vw), 2.69rem); /* min: 24px, max: 43.04px */;
        border-bottom: 1px solid var(--color-black);

        .service-item-hero {
            cursor: pointer;

            .title-wrapper{
                display: flex;
                align-items: center;
            }

            p {
                font-size: clamp(1.125rem, calc(0.797rem + 0.75vw), 1.5rem); /* min: 18px, max: 24px */;
            }

            .service-toggle {
                width: 2.4375rem;
                height: 2.4375rem;
                position: relative;
                margin-left: auto;

                &::before,
                &::after {
                    content: '';
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    width: 100%;
                    height: 2px;
                    background-color: var(--color-black);
                    position: absolute;
                    transition: transform var(--transition);
                }

                &::before {
                    transform: translate(-50%, -50%) rotate(90deg);
                }

                &::after {
                    transform: translate(-50%, -50%) rotate(0);
                }
            }
        }

        .service-content {
            grid-template-rows: 0fr;
            display: grid;
            transition: grid-template-rows var(--transition);

            .inner {
                overflow: hidden;
            }
        }

        .content-wrapper {
            padding-top: clamp(1.625rem, calc(1.25rem + 1.88vw), 2.69rem); /* min: 26px, max: 43.04px */;
        }

        &[data-open="true"] {
            .service-content {
                grid-template-rows: 1fr;
            }

            .service-toggle {
                &::before {
                    transform: translate(-50%, -50%) rotate(0);
                }

            }
        }
    }
}