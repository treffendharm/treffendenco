// Define a variable for the base path that can be overridden
$image-base-path: '../images' !default;

@mixin mask($svg: 'block-blob') {
    -webkit-mask: url('#{$image-base-path}/svg/' + $svg + '.svg') no-repeat 50% 50%;
    mask: url('#{$image-base-path}/svg/' + $svg + '.svg') no-repeat 50% 50%;
    -webkit-mask-size: contain;
    mask-size: contain;
    transition: var(--transition);
}


@mixin bg-mask($svg: 'block-blob') {
    background-image: url('#{$image-base-path}/svg/' + $svg + '.svg');
    background-repeat: no-repeat;
    background-position: 50% 50%;
    background-size: contain;
}


@mixin icon($svg, $position: 'before', $width: 1em, $offset: 0, $padding: 1em, $color: currentColor) {
    position: relative;

    // If the position is 'before'
    @if $position =='before' {
        padding-left: $padding;

        &::before {
            content: '';
            position: absolute;
            top: 50%;
            left: $offset;
            transform: translateY(-50%);
            width: $width;
            aspect-ratio: 1;
            background-color: $color;
            @include mask($svg);
        }
    }

    // If the position is 'after'
    @else if $position =='after' {
        padding-right: $padding;

        &::after {
            content: '';
            position: absolute;
            top: 50%;
            right: $offset;
            transform: translateY(-50%);
            width: $width;
            aspect-ratio: 1;
            background-color: $color;
            @include mask($svg);
        }
    }
}



%a-hover {
    line-height: 220%;
    position: relative;
    width: fit-content;
    overflow: hidden;
    // display: block;
    --_effect-color: var(--color-primary);
    display: inline-block;

    &::after,
    &::before {
        content: "";
        width: 100%;
        height: 1px;
        background-color: var(--color-black);
        position: absolute;
        bottom: .6em;
        left: 0;
        pointer-events: none;
        display: inline-block;

    }

    &::before {
        background-color: var(--_effect-color);
        z-index: 2;
        width: 0;
        left: 0;
        transition: left var(--transition), width var(--transition) .2s;
    }

    &:hover,
    &:focus-visible {
        &::before {
            width: 100%;
            left: 100%;
            transition: width var(--transition), left var(--transition) .2s;
        }
    }
}


// %a-hover-new {
//     position: relative;
//     display: inline;
//     background-image: linear-gradient(to right, var(--color-black) 100%, transparent 0);
//     background-size: 100% 1px;
//     background-position: 0 100%;
//     background-repeat: no-repeat;
//     transition: background-size 0.3s ease-in-out;

//     &:hover,
//     &:focus-visible {
//         background-size: 0% 1px; // Shrinks to simulate movement
//         transition: background-size 0.3s ease-in-out 0.2s;
//     }
// }


// %a-hover-new {
//     display: inline;
//     --_text-color: var(--color-black);
//     --transition-timeing: .4s;
//     --cubic: cubic-bezier(0.6, 0.03, 0.28, 0.98);

//     color: var(--_text-color, currentColor);
//     text-decoration: none;

//     background-image: linear-gradient(to right, var(--_text-color), var(--_text-color));
//     background-repeat: no-repeat;
//     background-size: 100% 1px;
//     background-position: 0% 100%;

//     transition:
//         background-size var(--transition-timeing) var(--cubic),
//         background-position var(--transition-timeing) var(--cubic);

//     &:hover {
//         background-size: 0% 1px;
//     }
// }



%a-hover-new {
    position: relative;
    width: fit-content;
    overflow: hidden;
    // display: block;
    --_effect-color: var(--color-primary);
    display: inline-flex;
    
    &::after,
    &::before {
        content: "";
        height: 1px;
        background-color: var(--color-black);
        position: absolute;
        width: 0;
        bottom: .2em;
        left: 0;
        pointer-events: none;
        display: inline-block;
    }

    &::before {
        width: 0;
        transition: width var(--transition) 0s;
    }
    
    &::after {
        right: 0;
        width: 100%;
        left: auto;
        transition: right var(--transition) calc(var(--transition-timeing) / 2);
    }

    &:hover,
    &:focus-visible {
        &::before {
            width: 100%;
            transition: width var(--transition) calc(var(--transition-timeing) / 2);
        }

        &::after{
            right: -100%;
            transition: right var(--transition) 0s;
        }
    }
}